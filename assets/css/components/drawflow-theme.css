:root {
  --dfBackgroundColor: transparent;
  --dfBackgroundSize: 20px;
  --dfBackgroundImage: none;

  --dfNodeType: flex;
  --dfNodeTypeFloat: none;
  --dfNodeBackgroundColor: rgba(248, 248, 248, 1);
  --dfNodeTextColor: #000000;
  --dfNodeBorderSize: 1px;
  --dfNodeBorderColor: rgba(222, 222, 222, 1);
  --dfNodeBorderRadius: 4px;
  --dfNodeMinHeight: 25px;
  --dfNodeMinWidth: 100px;
  --dfNodePaddingTop: 12px;
  --dfNodePaddingBottom: 12px;
  --dfNodeBoxShadowHL: 0px;
  --dfNodeBoxShadowVL: 3px;
  --dfNodeBoxShadowBR: 15px;
  --dfNodeBoxShadowS: 1px;
  --dfNodeBoxShadowColor: rgba(215, 215, 215, 1);

  --dfNodeHoverBackgroundColor: #ffffff;
  --dfNodeHoverTextColor: #000000;
  --dfNodeHoverBorderSize: 1px;
  --dfNodeHoverBorderColor: rgba(181, 245, 255, 1);
  --dfNodeHoverBorderRadius: 4px;

  --dfNodeHoverBoxShadowHL: 0px;
  --dfNodeHoverBoxShadowVL: 2px;
  --dfNodeHoverBoxShadowBR: 15px;
  --dfNodeHoverBoxShadowS: 2px;
  --dfNodeHoverBoxShadowColor: #4ea9ff;

  --dfNodeSelectedBackgroundColor: rgba(206, 237, 252, 1);
  --dfNodeSelectedTextColor: rgba(0, 0, 0, 1);
  --dfNodeSelectedBorderSize: 1px;
  --dfNodeSelectedBorderColor: rgba(255, 255, 255, 1);
  --dfNodeSelectedBorderRadius: 4px;

  --dfNodeSelectedBoxShadowHL: 0px;
  --dfNodeSelectedBoxShadowVL: 2px;
  --dfNodeSelectedBoxShadowBR: 15px;
  --dfNodeSelectedBoxShadowS: 2px;
  --dfNodeSelectedBoxShadowColor: #4ea9ff;

  --dfInputBackgroundColor: #ffffff;
  --dfInputBorderSize: 1px;
  --dfInputBorderColor: #000000;
  --dfInputBorderRadius: 50px;
  --dfInputLeft: -24px;
  --dfInputHeight: 15px;
  --dfInputWidth: 15px;

  --dfInputHoverBackgroundColor: rgba(122, 251, 137, 1);
  --dfInputHoverBorderSize: 1px;
  --dfInputHoverBorderColor: #000000;
  --dfInputHoverBorderRadius: 50px;

  --dfOutputBackgroundColor: #ffffff;
  --dfOutputBorderSize: 1px;
  --dfOutputBorderColor: #000000;
  --dfOutputBorderRadius: 50px;
  --dfOutputRight: -7px;
  --dfOutputHeight: 15px;
  --dfOutputWidth: 15px;

  --dfOutputHoverBackgroundColor: rgba(81, 226, 255, 1);
  --dfOutputHoverBorderSize: 1px;
  --dfOutputHoverBorderColor: #000000;
  --dfOutputHoverBorderRadius: 50px;

  --dfLineWidth: 3px;
  --dfLineColor: #4682b4;
  --dfLineHoverColor: rgba(38, 146, 237, 1);
  --dfLineSelectedColor: #43b993;

  --dfRerouteBorderWidth: 2px;
  --dfRerouteBorderColor: #000000;
  --dfRerouteBackgroundColor: #ffffff;

  --dfRerouteHoverBorderWidth: 2px;
  --dfRerouteHoverBorderColor: #000000;
  --dfRerouteHoverBackgroundColor: #ffffff;

  --dfDeleteDisplay: block;
  --dfDeleteColor: #ffffff;
  --dfDeleteBackgroundColor: #000000;
  --dfDeleteBorderSize: 2px;
  --dfDeleteBorderColor: #ffffff;
  --dfDeleteBorderRadius: 50px;
  --dfDeleteTop: -15px;

  --dfDeleteHoverColor: #000000;
  --dfDeleteHoverBackgroundColor: #ffffff;
  --dfDeleteHoverBorderSize: 2px;
  --dfDeleteHoverBorderColor: #000000;
  --dfDeleteHoverBorderRadius: 50px;

}

#drawflow {
  background: transparent !important; /* Remove background so comment connections show through */
  background-size: var(--dfBackgroundSize) var(--dfBackgroundSize);
  background-image: none !important; /* Remove grid pattern */
  position: relative; /* Ensure proper stacking context */
}

/* Additional rule to override inline styles */
div#drawflow {
  background: transparent !important;
  background-color: transparent !important;
}

/* Force background transparency for Drawflow library */
.drawflow {
  background: transparent !important;
  background-color: transparent !important;
  background-image: none !important;
}

/* Node drag handle styling - only show move cursor on the grip bar */
.node-drag-handle {
  transition: background-color 0.2s ease;
  user-select: none; /* Prevent text selection on drag handle */
  cursor: move !important; /* Move cursor only on the drag handle */
}

.node-drag-handle:hover {
  background: rgba(0,0,0,0.1) !important;
}

.node-drag-handle:hover i {
  color: #666 !important;
}

/* Text cursor for editable text elements */
.drawflow .drawflow-node .node-title,
.drawflow .drawflow-node .node-description {
  user-select: text !important;
  cursor: text !important;
}

.drawflow .drawflow-node .node-title:focus,
.drawflow .drawflow-node .node-description:focus {
  cursor: text !important;
}

/* Text cursor for textarea specifically */
.drawflow .drawflow-node textarea.node-description {
  cursor: text !important;
}

/* Crosshair cursor for input/output connection points */
.drawflow .drawflow-node .input,
.drawflow .drawflow-node .output {
  cursor: crosshair !important;
}

/* Title editing styles */
.drawflow .drawflow-node .node-title {
  font-size: 11.7px; /* 10% smaller than default 13px */
  transition: all 0.2s ease;
  border-radius: 2px;
  padding: 2px 4px;
  margin: -2px -4px;
}

.drawflow .drawflow-node .node-title:focus {
  background: white !important;
  border: 1px solid #ccc !important;
  box-shadow: 0 0 3px rgba(0, 123, 255, 0.25);
  outline: none !important;
}

.drawflow .drawflow-node {
  display: var(--dfNodeType);
  background: var(--dfNodeBackgroundColor);
  color: var(--dfNodeTextColor);
  border: var(--dfNodeBorderSize)  solid var(--dfNodeBorderColor);
  border-radius: var(--dfNodeBorderRadius);
  min-height: var(--dfNodeMinHeight);
  width: auto;
  min-width: var(--dfNodeMinWidth);
  padding-top: var(--dfNodePaddingTop);
  padding-bottom: var(--dfNodePaddingBottom);
  -webkit-box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
  box-shadow:  var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
  cursor: default !important; /* Normal cursor for the node body */
}

.drawflow .drawflow-node:hover {
  background: var(--dfNodeHoverBackgroundColor);
  color: var(--dfNodeHoverTextColor);
  border: var(--dfNodeHoverBorderSize)  solid var(--dfNodeHoverBorderColor);
  border-radius: var(--dfNodeHoverBorderRadius);
  -webkit-box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
  box-shadow:  var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
}

.drawflow .drawflow-node.selected {
  background: var(--dfNodeSelectedBackgroundColor);
  color: var(--dfNodeSelectedTextColor);
  border: var(--dfNodeSelectedBorderSize)  solid var(--dfNodeSelectedBorderColor);
  border-radius: var(--dfNodeSelectedBorderRadius);
  -webkit-box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
  box-shadow:  var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
}

.drawflow .drawflow-node .input {
  left: var(--dfInputLeft);
  background: var(--dfInputBackgroundColor);
  border: var(--dfInputBorderSize)  solid var(--dfInputBorderColor);
  border-radius: var(--dfInputBorderRadius);
  height: var(--dfInputHeight);
  width: var(--dfInputWidth);
}

.drawflow .drawflow-node .input:hover {
  background: var(--dfInputHoverBackgroundColor);
  border: var(--dfInputHoverBorderSize)  solid var(--dfInputHoverBorderColor);
  border-radius: var(--dfInputHoverBorderRadius);
}

.drawflow .drawflow-node .outputs {
  float: var(--dfNodeTypeFloat);
}

.drawflow .drawflow-node .output {
  right: var(--dfOutputRight);
  background: var(--dfOutputBackgroundColor);
  border: var(--dfOutputBorderSize)  solid var(--dfOutputBorderColor);
  border-radius: var(--dfOutputBorderRadius);
  height: var(--dfOutputHeight);
  width: var(--dfOutputWidth);
}

.drawflow .drawflow-node .output:hover {
  background: var(--dfOutputHoverBackgroundColor);
  border: var(--dfOutputHoverBorderSize)  solid var(--dfOutputHoverBorderColor);
  border-radius: var(--dfOutputHoverBorderRadius);
}

.drawflow .connection .main-path {
  stroke-width: var(--dfLineWidth);
  stroke: var(--dfLineColor);
  cursor: pointer; /* Make it clear that connections are interactive */
}

.drawflow .connection .main-path:hover {
  stroke: var(--dfLineHoverColor);
  stroke-width: calc(var(--dfLineWidth) + 1px); /* Make line slightly thicker on hover */
}

.drawflow .connection {
  cursor: pointer; /* Make entire connection area clickable */
}

.drawflow .connection:hover .main-path {
  stroke: var(--dfLineHoverColor);
  stroke-width: calc(var(--dfLineWidth) + 1px);
}

.drawflow .connection .main-path.selected {
  stroke: var(--dfLineSelectedColor);
}

.drawflow .connection .point {
  stroke: var(--dfRerouteBorderColor);
  stroke-width: var(--dfRerouteBorderWidth);
  fill: var(--dfRerouteBackgroundColor);
}

.drawflow .connection .point:hover {
  stroke: var(--dfRerouteHoverBorderColor);
  stroke-width: var(--dfRerouteHoverBorderWidth);
  fill: var(--dfRerouteHoverBackgroundColor);
}

/* Comment connection styling - using same structure as regular connections */
.drawflow .comment-connection .comment-path {
  stroke: #F6EC55 !important; /* Light cream yellow color */
  stroke-width: 1px !important; 
  stroke-dasharray: 8,4 !important; /* Dashed line pattern */
  fill: none !important;
  opacity: 0.9 !important;
  cursor: pointer;
  pointer-events: stroke;
}

.drawflow .comment-connection .comment-path:hover {
  stroke: #F0E032 !important; /* Slightly darker on hover */
  opacity: 1 !important;
  stroke-width: 2px !important;
}

.drawflow-delete {
  display: none !important; /* Hide the default delete button - we'll use context menu instead */
}

.parent-node .drawflow-delete {
  top: var(--dfDeleteTop);
}

.drawflow-delete:hover {
  color: var(--dfDeleteHoverColor);
  background: var(--dfDeleteHoverBackgroundColor);
  border: var(--dfDeleteHoverBorderSize) solid var(--dfDeleteHoverBorderColor);
  border-radius: var(--dfDeleteHoverBorderRadius);
}

/* Special styling for Comment nodes */
.drawflow .drawflow-node.comment-node {
  background: rgba(254, 251, 218, 1);
  border: 1px solid rgba(255, 255, 255, 1);
  border-radius: 4px;
  min-height: 50px;
  min-width: 135px;
  padding-top: 8px;
  padding-bottom: 8px;
  -webkit-box-shadow: 0px 1px 6px 0px rgba(143, 143, 143, 1);
  box-shadow: 0px 1px 6px 0px rgba(143, 143, 143, 1);
  cursor: default !important; /* Normal cursor for comment nodes too */
}

.drawflow .drawflow-node.comment-node:hover {
  background: rgba(252, 247, 178, 1);
  border: 1px solid rgba(255, 255, 255, 1);
  border-radius: 4px;
  -webkit-box-shadow: 0px 1px 6px 0px rgba(143, 143, 143, 1);
  box-shadow: 0px 1px 6px 0px rgba(143, 143, 143, 1);
}

.drawflow .drawflow-node.comment-node.selected {
  background: rgba(252, 247, 178, 1);
  border: 1px solid rgba(174, 168, 85, 1);
  border-radius: 4px;
  -webkit-box-shadow: 0px 1px 6px 0px rgba(143, 143, 143, 1);
  box-shadow: 0px 1px 6px 0px rgba(143, 143, 143, 1);
}

.drawflow .drawflow-node.comment-node .input {
  left: -27px;
  background: #ffffff;
  border: 1px solid #000000;
  border-radius: 50px;
  height: 20px;
  width: 20px;
}

.drawflow .drawflow-node.comment-node .input:hover {
  background: #ffffff;
  border: 2px solid #000000;
  border-radius: 50px;
}

.drawflow .drawflow-node.comment-node .output {
  right: -3px;
  background: #ffffff;
  border: 1px solid #000000;
  border-radius: 50px;
  height: 20px;
  width: 20px;
}

.drawflow .drawflow-node.comment-node .output:hover {
  background: #ffffff;
  border: 2px solid #000000;
  border-radius: 50px;
}

/* Crosshair cursor for comment node input/output circles */
.drawflow .drawflow-node.comment-node .input,
.drawflow .drawflow-node.comment-node .output {
  cursor: crosshair !important;
}

/* Comment node title styling */
.drawflow .drawflow-node.comment-node .node-title {
  font-size: 11.7px; /* 10% smaller */
}

.drawflow .drawflow-node.comment-node .node-title:focus {
  background: white !important;
  border: 1px solid #ccc !important;
  box-shadow: 0 0 3px rgba(0, 123, 255, 0.25);
  outline: none !important;
}

/* Custom Context Menu */
.custom-context-menu {
  position: absolute;
  background: white;
  border: 1px solid #ddd;
  border-radius: 6px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 10000;
  min-width: 150px;
  padding: 4px 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  font-size: 14px;
}

.context-menu-item {
  padding: 8px 16px;
  cursor: pointer;
  display: flex;
  align-items: center;
  transition: background-color 0.2s;
}

.context-menu-item:hover {
  background-color: #f5f5f5;
}

.context-menu-item.danger {
  color: #dc3545;
}

.context-menu-item.danger:hover {
  background-color: #fff5f5;
}

.context-menu-item i {
  margin-right: 8px;
  width: 16px;
  text-align: center;
}

.context-menu-divider {
  height: 1px;
  background-color: #eee;
  margin: 4px 0;
}

/* Submenu styling */
.custom-context-submenu {
  position: absolute;
  background: white;
  border: 1px solid #ddd;
  border-radius: 6px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 10001; /* Higher than main menu */
  min-width: 180px;
  padding: 4px 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  font-size: 14px;
}

.context-menu-item.has-submenu {
  position: relative;
}

.context-menu-item.has-submenu .submenu-arrow {
  position: absolute;
  right: 8px;
  margin-left: auto;
  opacity: 0.6;
  font-size: 12px;
}

.context-menu-item.connected {
  background-color: #fff3cd;
  border-left: 3px solid #ffc107;
}

.context-menu-item.connected:hover {
  background-color: #ffeaa7;
}

.context-menu-item.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.context-menu-item.disabled:hover {
  background-color: transparent;
}
